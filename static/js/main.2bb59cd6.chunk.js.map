{"version":3,"sources":["components/Header.js","components/Statedata.js","components/Footer.js","components/India.js","components/World.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","style","backgroundColor","to","className","Toggle","aria-controls","Collapse","id","Nav","Component","state","StateData","Axios","get","then","response","setState","data","keys","Object","this","Accordion","map","itm","ky","districts","districtData","total_active","total_confirmed","total_deaths","total_recover","district_list","x","active","confirmed","deceased","recovered","ob","push","Card","as","Button","variant","eventKey","Body","district_name","Footer","class","href","India","color","fontFamily","src","alt","border","Title","cases","Text","todayCases","todayRecovered","deaths","todayDeaths","World","country","width","countryInfo","flag","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2bb59cd6.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Navbar,Nav} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\n class Header extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar collapseOnSelect expand=\"lg\" style={{backgroundColor:\"#eaeaea\"}}>\n                <Link to=\"/\" className=\"text-dark font-weight-bold \"style={{\"text-decoration\":\"none\"}}>Covid-19 Tracker</Link>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Link className=\"nav-link font-weight-bold\" to=\"/India\">India</Link>\n                    <Link className=\"nav-link font-weight-bold\" to=\"/World\">World</Link>\n                    \n                    </Nav>\n                    \n                </Navbar.Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport {Accordion,Card,Button} from 'react-bootstrap';\nimport Axios from 'axios';\n\nexport default class   extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            StateData:{}\n        }\n    }\n\n    componentDidMount(){\n        Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\n             this.setState({\n                StateData:response.data\n            })\n        })\n    }\n\n    render() {\n\n        let keys=Object.keys(this.state.StateData)\n\n        return (\n            <div>\n                <div className=\"row\">\n                     <div className=\"col-md-12\">\n                     <Accordion>\n\n\n                        {keys.map((itm,ky)=>{\n                            let districts=this.state.StateData[itm].districtData;\n                            //let district_keys=Object.keys(districts);\n\n                            let total_active=0;\n                            let total_confirmed=0;\n                            let total_deaths=0;\n                            let total_recover=0;\n\n                            let district_list=[]\n                            for(let x in districts){\n                                total_active+=districts[x].active; \n                                total_confirmed+=districts[x].confirmed;\n                                total_deaths+=districts[x].deceased;\n                                total_recover+=districts[x].recovered;\n                                \n\n                                let ob=districts[x]\n                                ob[\"district_name\"]=x;\n                                district_list.push(ob);\n                            }\n                            //console.log(district_keys)\n\n                            return(\n                                <Card className=\" justify-content-center\" >\n                                    <Card.Header>\n                                    <Accordion.Toggle as={Button} variant=\"light\" eventKey={ky}>\n                                        <span className=\" mx-7 btn-dark px-4\">{itm}</span> <span className=\" mx-3\">Total cases  {total_confirmed} </span>  <span className=\" mx-3\">Active  {total_active}</span> <span className=\"mx-3\">Recovered {total_recover}</span> <span className=\"mx-3\">Total death {total_deaths} </span>   \n                                    </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={ky}>\n                                    <Card.Body className=\" justify-content-center text-center\" >\n                                        <table style={{\"margin-left\":\"auto\",\"margin-right\":\"auto\",\"float\":\"center\"}} className=\"col-xl-12 col-lg-12 table table-bordered table-responsive  mx-auto text-center justify-content-center\"> \n                                            <thead>\n                                                <tr>\n                                                    <td>District</td>\n                                                    <td>Confirmed Cases</td>\n                                                    <td>Active</td>\n                                                    <td>Recovered</td>\n                                                    <td>Deaths</td>\n                                        \n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    district_list.map((itm,ky)=>{\n                                                        return(\n                                                            <tr>\n                                                                <td>{itm.district_name}</td>\n                                                                <td>{itm.confirmed}</td>\n                                                                <td>{itm.active}</td>\n                                                                <td>{itm.recovered}</td>\n                                                                <td>{itm.deceased}</td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>    \n                                    </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            )\n                                \n                            \n                        })\n\n                    }\n\n                \n                    </Accordion>\n                     </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer class=\"page-footer font-small blue\">\n\n                \n                <div class=\"footer-copyright text-center py-3 btn-dark\">© 2020 Copyright : \n                    <a className=\"btn-white\" href=\"https://github.com/georgejeswin\"> Jeswin George</a>\n                </div>\n               \n\n            </footer>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {Card} from 'react-bootstrap';\nimport Statedata from './Statedata';\nimport Footer from './Footer'\nimport Axios from 'axios';\n\n\nclass India extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            data:{}\n        }\n    }\n\n    componentDidMount(){\n        Axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response=>{\n            this.setState({\n                data:response.data\n            })\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"row text-center \">\n                    <div className=\"col-md-12 text-center \" >\n                        <br/>\n                        <h4 className=\"col-md-12 font-weight-bold \">COVID-19 CORONA VIRUS PANDEMIC</h4>\n                        <br/>\n                        \n                        \n                        <h1 style={{color: \"#e74e0d\",fontFamily:\"Impact, Charcoal, sans-serif\"}} className=\"text-center \">INDIA <img src=\"https://www.countryflags.io/IN/shiny/64.png\" alt=\"India\"/></h1>\n                    </div>\n                    <div className=\"col-md-12 font-weight-bold \" >\n                        <div className=\"text-center mx-auto\" >\n                            <div className=\"col-md-12 text-center justify-content-center\">\n                            <Card className=\"text-dark font-weight-bold\" style={{border:\"none\",backgroundColor:\"#eaeaea\"}} >\n                            <Card.Body className=\"text-center \">\n                                <Card.Title className=\"font-weight-bold\">Total Cases</Card.Title>\n                                <h1 className=\"font-weight-bold\">{this.state.data.cases}</h1>\n                                <Card.Text>\n                                <h6 className=\"font-weight-bold\"> Today Cases :{this.state.data.todayCases}</h6>\n                                </Card.Text>\n                                \n                                \n                                \n                                \n                            </Card.Body>\n                            </Card>\n                            </div>\n                            <div className=\"col-md-12\">\n                            <Card className=\"\" style={{border:\"none\",}}>\n                            <Card.Body className=\"text-center\">\n                                <Card.Title className=\"font-weight-bold\">Active Cases</Card.Title>\n                                <h1 className=\"font-weight-bold\">{this.state.data.active}</h1>\n                                \n                                \n                                \n                            </Card.Body>\n                            </Card>\n                            </div>\n                            <div className=\"col-md-12\" style={{border:\"none\"}}>\n                            <Card className=\"\" style={{border:\"none\",backgroundColor:\"#eaeaea\"}}>\n                            <Card.Body className=\"text-center\">\n                                <Card.Title className=\"font-weight-bold\">Total Recocery</Card.Title>\n                                <h1 className=\"font-weight-bold\">{this.state.data.recovered}</h1>\n                                <Card.Text>\n                                <h6 className=\"font-weight-bold\">Today Recovered :{this.state.data.todayRecovered}</h6>\n                                </Card.Text>\n                                \n                                \n                            </Card.Body>\n                            </Card>\n                            </div>\n                            <div className=\"col-md-12\" >\n                            <Card className=\"\" style={{border:\"none\"}}>\n                            <Card.Body className=\"text-center\">\n                                <Card.Title className=\"font-weight-bold\">Total Death</Card.Title>\n                                <h1 className=\"font-weight-bold\">{this.state.data.deaths}</h1>\n                                <Card.Text>\n                                <h6 className=\"font-weight-bold\"> Today Death :{this.state.data.todayDeaths}</h6>\n                                </Card.Text>\n                                \n                                \n                            </Card.Body>\n                            </Card>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-12\">\n                        <Statedata/>\n                    </div>\n                    <div className=\"col-md-12\">\n                        <Footer/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default India;\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport Footer from './Footer'\n\nclass World extends Component {\n\n    constructor(){\n        super();\n        this.state={\n            data:[]\n        }\n    }\n\n    componentDidMount(){\n        Axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\n\n        this.setState({data:response.data});\n    })\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                 <div className=\"col-md-12\">\n                      <table style={{\"margin-left\":\"auto\",\"margin-right\":\"auto\"}} className=\"table table-primary table-bordered  justify-content-center\">\n                          <thead>\n                              <tr>\n                                  <td>Country</td>\n                                  <td>Total cases</td>\n                                  <td>Recovered</td>\n                                  <td>Death</td>\n                              </tr>\n                          </thead>\n                          <tbody>\n                                {\n                                    this.state.data.map((itm,ky)=>{\n                                        return(\n                                            <tr>\n                                                <td>{itm.country}\n                                                <br/>\n                                                <img style={{width:'40px'}} src={itm.countryInfo.flag} alt=\"\"/></td>\n                                                <td>{itm.cases}</td>\n                                                <td>{itm.recovered}</td>\n                                                <td>{itm.deaths}</td>\n                                            </tr>\n                            \n                                        )\n                                    })\n                                }\n                          </tbody>\n                      </table>\n                 </div>\n                 <div className=\"col-md-12\">\n                        <Footer/>\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default World;","import React,{Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch}  from 'react-router-dom';\nimport Header from './components/Header';\nimport India from './components/India';\nimport World from './components/World';\nimport Footer from './components/Footer';\n\n\n \nclass App extends Component {\n\n\n\n   \n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Router>\n\n          <Header/>\n          <India/>\n          <Footer/>\n\n          <Switch>\n\n            <Route exact path=\"/\">\n              <India/>\n            </Route>\n            <Route path=\"/India\">\n              <India/>\n            </Route>\n\n            <Route path=\"/World\">\n              <World/>\n            </Route>\n            \n \n            </Switch>\n\n        </Router>\n          \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}